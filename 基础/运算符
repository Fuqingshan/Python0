#!/usr/bin/python3

#python的运算符
a=10
b=3

print(a+b)
print(a-b)
print(a*b)
print(a/b)
print(a//b)#向下取整，比如这儿就是3，如果-10//3则为-4
print(a**b)#幂 - 返回x的y次幂
print(a%b)#取模 - 返回除法的余数

#python的比较运算符
c=20
d=10

print(c==d)
print(c!=d)
print(c>d)
print(c<d)
print(c>=d)
print(c<=d)

#python的赋值运算符

e=10
f=3
c=0

c=e+f
print(c)
c+=e
print(c)
c-=e
print(c)
c*=e
print(c)
c/=e
print(c)
c**=e
print(c)
c//=e
print(c)
c%=e
print(c)

#海象运算符，可以在表达式内部为变量赋值
g='salads'
if (n := len(g)) > 10:
    print(f"List is too long ({n} elements, expected <= 10)")

#python位运算符
m=0b00111100
n=0b00001101

print(a&b)#参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0
print(a|b)#按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
print(a^b)#按位异或运算符：当两对应的二进位相异时，结果为1
print(~a)#按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1

m<<2 #左移动运算符：运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0。
m>>2 #右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数

#python的逻辑运算符
y=False
x=True
print(y and x) #布尔"与" - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。
print(y or x) #布尔"或" - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。
print(not x) #布尔"非" - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。

#python的成员运算符
a=10
b=20
list=[10,21,30]
if a in list:
    print('a in list')
else:
    print('a not in list')

if b not in list:
    print('b not in list')
else:
    print('b in list')

#python的身份运算符
a = 20
b = 20

if ( a is b ):
   print ("1 - a 和 b 有相同的标识")
else:
   print ("1 - a 和 b 没有相同的标识")

if ( id(a) == id(b) ):
   print ("2 - a 和 b 有相同的标识")
else:
   print ("2 - a 和 b 没有相同的标识")

# 修改变量 b 的值
b = 30
if ( a is b ):
   print ("3 - a 和 b 有相同的标识")
else:
   print ("3 - a 和 b 没有相同的标识")

if ( a is not b ):
   print ("4 - a 和 b 没有相同的标识")
else:
   print ("4 - a 和 b 有相同的标识")

'''
is和==的区别:
is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等
'''

'''
下面的优先级由高到低
**	指数 (最高优先级)
~ + -	按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)
* / % //	乘，除，求余数和取整除
+ -	加法减法
>> <<	右移，左移运算符
&	位 'AND'
^ |	位运算符
<= < > >=	比较运算符
== !=	等于运算符
= %= /= //= -= += *= **=	赋值运算符
is is not	身份运算符
in not in	成员运算符
not and or	逻辑运算符，and比or更高
'''